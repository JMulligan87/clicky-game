{"version":3,"sources":["components/Jumbotron/index.js","components/Container/index.js","components/ClickGame/index.js","App.js","index.js"],"names":["Jumbotron","className","this","props","currentScore","highScore","Component","Container","children","ClickGame","onClick","alt","name","src","image","App","state","characters","id","console","log","isRight","forEach","character","clicked","shuffleCards","rightClick","wrongClick","shuffle","slice","i","length","j","Math","floor","random","setState","test","map","key","ReactDOM","render","document","getElementById"],"mappings":"gwDA0BeA,G,uLAbX,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,eACA,wBAAIA,UAAU,eAAd,0CACA,wBAAIA,UAAU,eAAd,kBAA4CC,KAAKC,MAAMC,aAAvD,IAAqE,6BAArE,mBAA2FF,KAAKC,MAAME,iB,GAfxFC,c,aCITC,MAJf,SAAmBJ,GACjB,OAAO,yBAAKF,UAAU,aAAaE,EAAMK,W,MCY5BC,MAXf,SAAmBN,GACf,OACI,yBAAKF,UAAU,OAAOS,QAASP,EAAMO,SACjC,yBAAKC,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,UCgG9BC,E,2MAhGbC,MAAQ,CACNC,WAAW,YAAKA,GAChBb,aAAc,EACdC,UAAW,G,EAMbK,QAAU,SAACQ,GACTC,QAAQC,IAAIF,GACZ,IAAIG,GAAU,EACdJ,EAAWK,SAAQ,SAAAC,GACbL,IAAOK,EAAUL,KACdK,EAAUC,UACbH,GAAU,EACVE,EAAUC,SAAU,GAEtBL,QAAQC,IAAIC,GACZ,EAAKI,oBAGO,IAAZJ,EACF,EAAKK,WAAWT,GAEhB,EAAKU,WAAWV,I,EAKpBQ,aAAe,SAACR,GAGd,IAFA,IAAIW,EAAU,EAAKZ,MAAMC,WAAWY,QAE3BC,EAAIF,EAAQG,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC3C,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADG,EAEhB,CAACF,EAAQI,GAAIJ,EAAQE,IAA/CF,EAAQE,GAFkC,KAE9BF,EAAQI,GAFsB,KAI7C,EAAKI,SAAS,CAAEnB,WAAYW,K,EAG9BF,WAAa,SAACT,GACZ,IAAIoB,EAAO,EAAKrB,MAAMZ,aAAe,EAGjCiC,EAFY,EAAKrB,MAAMX,WAGzB,EAAK+B,SAAS,CACZhC,aAAciC,EACdhC,UAAWgC,K,EAMjBV,WAAa,SAACV,GAEZ,EAAKmB,UAAS,SAAAnB,GAAU,MAAK,CAC3Bb,aAAc,MAEhBe,QAAQC,IAAIH,I,wEAiBJ,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEb,aAAcF,KAAKc,MAAMZ,aACzBC,UAAWH,KAAKc,MAAMX,YAExB,yBAAKJ,UAAU,OACZC,KAAKc,MAAMC,WAAWqB,KAAI,SAAAf,GAAS,OAClC,kBAAC,EAAD,CACET,MAAOS,EAAUT,MACjByB,IAAKhB,EAAUL,GACfR,QAAS,kBAAM,EAAKA,QAAQa,EAAUL,gB,GAzFlCZ,a,MCDlBkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a55f8ccc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Jumbotron extends Component {\n\n  // state = {\n  //   currentScore: 0,\n  //   highScore: 0\n  // };\n\n  \n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"jumbotron\">\n          <h1 className=\"text-center\">Clicky Game</h1>\n          <h3 className=\"text-center\">Try not to click the same image twice!</h3>\n          <h4 className=\"text-center\">Current Score: {this.props.currentScore} <br/> Highest Score: {this.props.highScore}</h4>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\n\n\nfunction ClickGame(props) {\n    return (\n        <div className=\"card\" onClick={props.onClick}>\n            <img alt={props.name} src={props.image} />\n        </div>\n    );\n\n}\n\n\n\nexport default ClickGame;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport characters from \"./characters.json\";\nimport Container from \"./components/Container\";\nimport ClickGame from \"./components/ClickGame\"\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    characters: [...characters],\n    currentScore: 0,\n    highScore: 0\n  };\n\n\n\n\n  onClick = (id) => {\n    console.log(id)\n    let isRight = false;\n    characters.forEach(character => {\n      if (id === character.id) {\n        if (!character.clicked) {\n          isRight = true\n          character.clicked = true;\n        }\n        console.log(isRight)\n        this.shuffleCards();\n      }\n    })\n    if (isRight === true) {\n      this.rightClick(characters);\n    } else {\n      this.wrongClick(characters);\n    }\n\n  }\n\n  shuffleCards = (characters) => {\n    let shuffle = this.state.characters.slice();\n\n    for (let i = shuffle.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [shuffle[i], shuffle[j]] = [shuffle[j], shuffle[i]];\n    }\n    this.setState({ characters: shuffle });\n  }\n\n  rightClick = (characters) => {\n    let test = this.state.currentScore + 1;\n    let highScore = this.state.highScore;\n\n    if (test > highScore) {\n      this.setState({\n        currentScore: test,\n        highScore: test\n      })\n\n    }\n  }\n\n  wrongClick = (characters) => {\n\n    this.setState(characters => ({\n      currentScore: 0\n    }));\n    console.log(characters)\n  }\n  // if(characters.clicked===true){\n  //   // console.log(this)\n  //   this.setState({clicked: false,\n  //     currentScore: 0\n  //   })\n  // }else{\n  //   this.setState({clicked: true})\n  //   this.setState({currentScore: test})\n  // }\n\n\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Container>\n        <Jumbotron\n          currentScore={this.state.currentScore}\n          highScore={this.state.highScore}\n        />\n        <div className=\"row\">\n          {this.state.characters.map(character => (\n            <ClickGame\n              image={character.image}\n              key={character.id}\n              onClick={() => this.onClick(character.id)}\n            />\n          ))}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}