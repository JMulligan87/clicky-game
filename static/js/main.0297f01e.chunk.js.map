{"version":3,"sources":["components/Jumbotron/index.js","components/Container/index.js","components/ClickGame/index.js","App.js","index.js"],"names":["Jumbotron","className","this","props","currentScore","highScore","Component","Container","children","ClickGame","onClick","alt","name","src","image","App","state","characters","id","console","log","isRight","forEach","character","clicked","rightClick","wrongClick","shuffle","sort","Math","random","setState","alert","map","key","ReactDOM","render","document","getElementById"],"mappings":"gwDA0BeA,G,uLAbX,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,eACA,wBAAIA,UAAU,eAAd,0CACA,wBAAIA,UAAU,eAAd,kBAA4CC,KAAKC,MAAMC,aAAvD,IAAqE,6BAArE,mBAA2FF,KAAKC,MAAME,iB,GAfxFC,c,aCITC,MAJf,SAAmBJ,GACjB,OAAO,yBAAKF,UAAU,aAAaE,EAAMK,W,MCY5BC,MAXf,SAAmBN,GACf,OACI,yBAAKF,UAAU,OAAOS,QAASP,EAAMO,SACjC,yBAAKC,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,UCmF9BC,E,2MApFbC,MAAQ,CACNC,WAAW,YAAKA,GAChBb,aAAc,EACdC,UAAW,G,EAGbK,QAAU,SAAAQ,GACRC,QAAQC,IAAIF,GACZ,IAAIG,GAAU,EACRJ,EAAa,EAAKD,MAAMC,WAE9BA,EAAWK,SAAQ,SAAAC,GACbL,IAAOK,EAAUL,KACdK,EAAUC,UACbH,GAAU,EACVE,EAAUC,SAAU,QAIV,IAAZH,EACF,EAAKI,WAAWR,GAEhB,EAAKS,WAAWT,I,EAcpBQ,WAAa,SAAAR,GACX,IAAMU,EAAUV,EAAWW,MAAK,iBAAM,GAAMC,KAAKC,YAC7C1B,EAAe,EAAKY,MAAMZ,aAAe,EACzCC,EAAY,EAAKW,MAAMX,UAEvBD,EAAeC,IACjBA,EAAYD,GAEd,EAAK2B,SAAS,CACZd,WAAYU,EACZvB,aAAcA,EACdC,UAAWA,K,EAIfqB,WAAa,SAAAT,GACX,IAAMU,EAAUV,EAAWW,MAAK,iBAAM,GAAMC,KAAKC,YAEjDH,EAAQL,SAAQ,SAAAC,GAAS,OAAKA,EAAUC,SAAU,KAElD,EAAKO,SAAS,CACZ3B,aAAc,EACda,WAAYU,IAEdK,MAAM,kC,wEAGE,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACE5B,aAAcF,KAAKc,MAAMZ,aACzBC,UAAWH,KAAKc,MAAMX,YAExB,yBAAKJ,UAAU,OACZC,KAAKc,MAAMC,WAAWgB,KAAI,SAAAV,GAAS,OAClC,kBAAC,EAAD,CACET,MAAOS,EAAUT,MACjBoB,IAAKX,EAAUL,GACfR,QAAS,kBAAM,EAAKA,QAAQa,EAAUL,gB,GA5ElCZ,a,MCDlB6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0297f01e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Jumbotron extends Component {\n\n  // state = {\n  //   currentScore: 0,\n  //   highScore: 0\n  // };\n\n  \n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"jumbotron\">\n          <h1 className=\"text-center\">Clicky Game</h1>\n          <h3 className=\"text-center\">Try not to click the same image twice!</h3>\n          <h4 className=\"text-center\">Current Score: {this.props.currentScore} <br/> Highest Score: {this.props.highScore}</h4>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\n\n\nfunction ClickGame(props) {\n    return (\n        <div className=\"card\" onClick={props.onClick}>\n            <img alt={props.name} src={props.image} />\n        </div>\n    );\n\n}\n\n\n\nexport default ClickGame;\n","import React, { Component } from 'react';\nimport Jumbotron from './components/Jumbotron';\nimport characters from './characters.json';\nimport Container from './components/Container';\nimport ClickGame from './components/ClickGame';\n\nclass App extends Component {\n  state = {\n    characters: [...characters],\n    currentScore: 0,\n    highScore: 0\n  };\n\n  onClick = id => {\n    console.log(id);\n    let isRight = false;\n    const characters = this.state.characters;\n\n    characters.forEach(character => {\n      if (id === character.id) {\n        if (!character.clicked) {\n          isRight = true;\n          character.clicked = true;\n        }\n      }\n    });\n    if (isRight === true) {\n      this.rightClick(characters);\n    } else {\n      this.wrongClick(characters);\n    }\n  };\n\n  // shuffleCards = characters => {\n  //   let shuffle = this.state.characters.slice();\n\n  //   for (let i = shuffle.length - 1; i > 0; i--) {\n  //     let j = Math.floor(Math.random() * (i + 1));\n  //     [shuffle[i], shuffle[j]] = [shuffle[j], shuffle[i]];\n  //   }\n  //   this.setState({ characters: shuffle });\n  // };\n\n  rightClick = characters => {\n    const shuffle = characters.sort(() => 0.5 - Math.random());\n    let currentScore = this.state.currentScore + 1;\n    let highScore = this.state.highScore;\n\n    if (currentScore > highScore) {\n      highScore = currentScore;\n    }\n    this.setState({\n      characters: shuffle,\n      currentScore: currentScore,\n      highScore: highScore\n    });\n  };\n\n  wrongClick = characters => {\n    const shuffle = characters.sort(() => 0.5 - Math.random());\n\n    shuffle.forEach(character => (character.clicked = false));\n\n    this.setState({\n      currentScore: 0,\n      characters: shuffle\n    });\n    alert('Game Over! Please Play again.');\n  };\n\n  render() {\n    return (\n      <Container>\n        <Jumbotron\n          currentScore={this.state.currentScore}\n          highScore={this.state.highScore}\n        />\n        <div className='row'>\n          {this.state.characters.map(character => (\n            <ClickGame\n              image={character.image}\n              key={character.id}\n              onClick={() => this.onClick(character.id)}\n            />\n          ))}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}